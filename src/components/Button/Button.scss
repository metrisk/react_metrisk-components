/// ----------------------------------------------------------------------

/// Buttons

/// ----------------------------------------------------------------------

@use 'apply-props';
@use 'get-prop';
@use 'spacing';
@use 'corners';
@use 'colours';
@use 'borders';
@use 'shadows';
@use 'gradients';
@use 'animations';
@use 'typography';
@use 'transitions';
@use 'components';
@use 'resets';
@use 'utilities';
@use 'z-index';

/// -------------------
/// Button config
/// -------------------

$padding-x: spacing.$xl !default;
$border-radius: corners.$base !default;
$font-family: typography.$font-family--alt !default;
$font-weight: typography.$font-bold !default;
$transition: 
  background-color transitions.$ease, 
  color transitions.$ease, 
  fill transitions.$ease !default;

$types: (
  'primary': (
    background-image: gradients.$one,
    background-size: 200%,
      
    'hover': (
      animation: cycle 0.5s animations.$infinite-linear
    )
  ),
  'secondary': (
    background-image: gradients.$one,
    background-size: 200%,
    
    'hover': (
      animation: cycle 0.5s animations.$infinite-linear
    ),
      
    'before': (
      content: '',
      display: block,
      position: absolute,
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      background-color: white,
      z-index: z-index.$back - 1,
    )
  ),
  'tertiary': (
    padding-left: 0,
    padding-right: 0,
    
    'hover': (
      box-shadow: none
    )
  ),
  'action': (
    background-color: white,
    box-shadow: shadows.$two,
    width: components.$flow-height,
    height: components.$flow-height,
    text-align: center,
    padding-left: 0,
    padding-right: 0,
    border-radius: corners.$round,
    overflow: hidden,
    color: transparent, // Hide the text but we still want it there for accessibility

    'focus': (
      outline: none
    )
  )
) !default;

/// -------------------
/// Button selectors 
/// -------------------

.btn {
  @include resets.style;
  @include components.flow;
  @include components.interactive;
  position: relative;
  width: auto;
  border-radius: $border-radius; 
  padding-left: $padding-x;
  padding-right: $padding-x;
  font-family: $font-family;
  font-weight: $font-weight;
  transition: $transition;
  color: map-get(colours.$ui, 'five');
  letter-spacing: .5px;
  text-decoration: none;
  cursor: pointer;
  z-index: z-index.$default;

  &:focus {
    outline: none;
    border: borders.$one;
    opacity: 0.8;
  }

  &--disabled,
  &:disabled {
    opacity: 0.25;
    pointer-events: none;
  }

  &--l {
    padding-left: $padding-x * 1.5;
  }
  
  &--r {
    padding-right: $padding-x * 1.5;
  }

  &--l.btn--tertiary {
    padding-left: $padding-x;
  }
  
  &--r.btn--tertiary {
    padding-right: $padding-x;
  }

  @each $type in $types {
    $type-name: nth($type, 1);
    
    &--#{$type-name} {
      @include apply-props.apply-props(map-get($types, $type-name));
    }
  }
}

/// -------------------
/// Button Icon 
/// -------------------

.btn__icn {
  @include utilities.center-y;
  vertical-align: text-top;

  .btn--l & {
    left: $padding-x / 2;
  }

  .btn--r & {
    right: $padding-x / 2;
  }

  .btn--c & {
    @include utilities.center;
  }

  .btn--tertiary.btn--l & {
    left: 0;
  }

  .btn--tertiary.btn--r & {
    right: 0;
  }

  & > svg path {
    fill: black;
  }
}